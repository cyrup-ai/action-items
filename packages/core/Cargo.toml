[package]
name = "action_items_core"
version = { workspace = true }
edition = { workspace = true }

[dependencies]
bevy = { workspace = true }
serde.workspace = true
serde_json.workspace = true
thiserror.workspace = true
crossbeam-channel.workspace = true

dirs = { workspace = true }
uuid.workspace = true
moka = { workspace = true, features = ["sync"] }
action_items_ecs_clipboard = { version = "0.1.0", path = "../ecs-clipboard" }
action_items_ecs_search_aggregator = { version = "0.1.0", path = "../ecs-search-aggregator" }
# Temporarily disabled due to SurrealDB dependency issues:
# action_items_ecs_surrealdb = { path = "../ecs-surrealdb" }
notify-rust = { workspace = true }
# action_items_ecs_fetch = { path = "../ecs-fetch" }  # Temporarily disabled due to compilation errors
jwalk = { workspace = true }
rayon = { workspace = true }
log = { workspace = true }
libloading = "0.8.8"

# Common types and traits
action_items_common = { path = "../common", features = ["bevy"] }
# Additional ECS Services with conditional compilation
# action_items_ecs_cache = { path = "../ecs-cache", optional = true }  # Temporarily disabled due to goldylox errors
# ecs-notifications = { path = "../ecs-notifications", optional = true, version = "0.1.0" }  # Temporarily disabled
action_items_ecs_progress = { path = "../ecs-progress", optional = true, version = "0.1.0" }
ecs-tls = { path = "../ecs-tls", optional = true }

# Plugin support
action_items_native = { path = "../plugin-native" }
action_items_wasm = { path = "../plugin-wasm" }
extism = { workspace = true }
wasmtime = "36"
futures.workspace = true
async-std = "1"
futures-lite = "2"

# Deno runtime dependencies - aligned with serde_v8 0.271.0 and v8 140.2.0
deno_core = "0.362.0"
deno_console = "0.218.0"
deno_url = "0.218.0"
deno_webidl = "0.218.0"
deno_web = "0.249.0"
deno_error = "0.7.0"
deno_ops = "0.238.0"
serde_v8.workspace = true
v8.workspace = true
deno_path_util = "0.6.1"
deno_unsync = "0.4.4"
anyhow = "1.0"
parking_lot = "0.12"
once_cell = "1.21"

chrono = { version = "0.4", features = ["serde"] }
# HTTP client for plugin bridge services
reqwest = { version = "0.12.23", features = ["json"], default-features = false }
semver = "1.0"
tokio = { version = "1", features = ["time", "fs", "full"] }
regex = "1"
async-trait = "0.1"
toml = "0.9.5"
lazy_static = "1.5"
bincode = "2.0.1"
dashmap = "6.1.0"
crossbeam-utils = "0.8.21"
tracing = "0.1.41"
base64 = "0.22.1"
# surrealdb = { path = "../../forks/surrealdb/crates/sdk", features = ["kv-surrealkv"] }

# High-performance event router dependencies
heapless = "0.9"  # Zero-allocation data structures
static_assertions = "1.1"  # Compile-time capacity validation
opentelemetry = "0.30.0"  # Distributed tracing
opentelemetry_sdk = "0.30.0"  # OpenTelemetry SDK with propagators
opentelemetry-jaeger = "0.22"  # Jaeger tracing backend
opentelemetry-prometheus = "0.29"  # Prometheus metrics integration
prometheus = "0.14.0"  # Metrics export
hyper = { version = "1", features = ["server", "http1"] }  # HTTP server for metrics
tracing-subscriber = { version = "0.3", features = ["json"] }  # Structured logging
tracing-opentelemetry = "0.31"  # OpenTelemetry tracing integration
tokio-tungstenite = "0.27"  # WebSocket support for real-time dashboard
# Use objc2 ecosystem instead of rust-security-framework
objc2-core-foundation = { version = "0.3.1", features = ["std", "CFDate", "CFData", "CFError", "CFURL"] }
objc2-security = { version = "0.3.1", features = ["SecStaticCode", "SecCertificate", "SecCode", "SecTrust", "Authorization", "SecKeychain"] }

cedar-policy = "4.5.1"
crossbeam-queue = "0.3.12"
action_items_ecs_compression = { version = "0.1.0", path = "../ecs-compression" }
ecs-service-bridge = { version = "0.1.0", path = "../ecs-service-bridge" }
action_items_ecs_permissions = { version = "0.1.0", path = "../ecs-permissions" }
ecs-notifications = { version = "0.1.0", path = "../ecs-notifications" }
# action_items_ecs_cache = { version = "0.1.0", path = "../ecs-cache" }  # Temporarily disabled
action-items_ecs-ui = { version = "0.1.0", path = "../ecs-ui" }

[lib]
name = "action_items_core"
path = "src/lib.rs"

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
# Native file dialogs, etc.
rfd = { workspace = true }

[target.'cfg(target_os = "linux")'.dependencies]
# Linux PolicyKit integration for capability verification
polkit = "0.19.0"
glib = "0.21.1"
libc = "0.2"
# Linux D-Bus notifications
zbus = "5.10.0"
serde = "1.0.219"
futures-lite = "2.6.1"

[target.'cfg(target_os = "macos")'.dependencies]
# macOS Security.framework integration for capability verification via objc2
objc2 = "0.6.2"
objc2-foundation = "0.3.1"
objc2-user-notifications = "0.3.1"
objc2-app-kit = "0.3.1"
block2 = "0.6.1"
libc = "0.2"
sha2 = "0.10"
hex = "0.4"
x509-parser = "0.18"

[target.'cfg(target_os = "windows")'.dependencies]
# Windows UAC and security integration for capability verification
clipboard-win = "5.4"
windows-sys = { version = "0.61", features = [
    "Win32_Security",
    "Win32_System_Threading",
    "Win32_Security_Cryptography",
    "Win32_Security_WinTrust",
    "Win32_Foundation",
    "Win32_System_SystemServices",
    "Win32_UI_Shell"
] }
sha2 = "0.10"
# Windows Toast notifications
tauri-winrt-notification = "0.7.2"

# Re-enable warnings for this workspace package
[lints]

[lints.rust]
warnings = "warn"
unused = "warn"
unused_imports = "warn"
unused_variables = "warn"
unused_mut = "warn"
dead_code = "warn"
deprecated = "warn"

[dev-dependencies]
arbitrary = "1.4.2"
assert_matches = "1.5.0"
fake = "4.4.0"
futures-test = "0.3.31"
insta = "1.43"
mockall = "0.13.1"
proptest = "1.7.0"
quickcheck = "1.0.3"
serde_test = "1.0.177"
serial_test = "3.2.0"
tempfile = "3.21.0"
tokio-test = "0.4.4"
wiremock = "0.6.5"
# Development/testing dependencies

[features]
default = ["image-data", "progress"]
image-data = ["action_items_ecs_clipboard/image-data"]
# ECS Service feature flags for conditional compilation
# cache = ["dep:action_items_ecs_cache"]  # Temporarily disabled due to goldylox errors
# notifications = ["dep:ecs-notifications"]  # Temporarily disabled
progress = ["dep:action_items_ecs_progress"]
tls = ["dep:ecs-tls"]
# deno = ["dep:action_items_ecs_deno"]  # Package doesn't exist
